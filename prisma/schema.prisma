// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  COMPANY
}

model user {
  user_id                             Int                             @id @default(autoincrement())
  name                                String?
  email                               String?                         @unique
  image                               String?                         @unique
  phone                               String?                         @unique @db.VarChar(20)
  // username                            String?                         @unique
  salt                                String?                         @db.VarChar(255)
  password                            String?                         @db.VarChar(100)
  age                                 Int?
  refresh_token                       String?                         @db.Text
  token_version                       Int?                             @default(0)
  status                              Boolean?                        @default(true)
  company_name                        String?                         @db.VarChar(255)
  insurances                          Boolean?                        @default(false)
  bonds                               Boolean?                        @default(false)
  role                                Role?
  // user_amount                         Int?                     
  createdAt                           DateTime                        @default(now())
  updatedAt                           DateTime                        @default(now()) @updatedAt

    // Relation to user_amount
  user_amounts                       user_amount[]
  buy_stocks                         buy_stocks[]
  Bond                               Bond[]
  buy_bonds                          buy_bonds[]
  bonds_records                      bonds_records[]
}

model user_amount {
  user_amount_id                      Int                             @id @default(autoincrement())
  amount                              Int?
  status                              Boolean?                        @default(true)
  user_id                             Int
  is_current                          Boolean?                        @default(false)
  amount_spend                        Int?
  type                                String?                         @db.VarChar(255)
  profit                              Boolean?                        @default(false)
  user                                user                            @relation(fields: [user_id], references: [user_id])
  createdAt                           DateTime                        @default(now())
  updatedAt                           DateTime                        @default(now()) @updatedAt
}

model buy_stocks {
  stock_id        Int          @id @default(autoincrement())
  user_id         Int
  quantity        Int?
  currentAmount   Int?
  company_name    String?
  is_current      Boolean      @default(false)
  status          Boolean      @default(true)
  user            user         @relation(fields: [user_id], references: [user_id])                 
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @default(now()) @updatedAt
}

model stocks_records {
  stocks_records_id   Int      @id @default(autoincrement())
  user_id             Int
  type                String   
  company_name        String?
  quantity            Int?
  price               Int?     
  amount_spend        Int?     
  profit              Int?     
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now()) @updatedAt
}

model Bond {
  bond_id          Int             @id @default(autoincrement())
  company_id       Int
  name             String          @db.VarChar(255)
  description      String?         @db.Text
  face_value       Int
  coupon_rate      Float
  total_amount     Int
  remaining        Int
  maturity_date    DateTime
  status           Boolean         @default(true)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now()) @updatedAt

  company          user            @relation(fields: [company_id], references: [user_id])
  buy_bonds        buy_bonds[]
  bonds_records    bonds_records[]
}

model buy_bonds {
  bond_purchase_id Int             @id @default(autoincrement())
  user_id          Int
  bond_id          Int
  quantity         Int?
  purchase_price   Int?
  is_current       Boolean?         @default(true)
  status           Boolean?         @default(true)
  user             user            @relation(fields: [user_id], references: [user_id])
  bond             Bond            @relation(fields: [bond_id], references: [bond_id])
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now()) @updatedAt
}

model bonds_records {
  bond_record_id   Int             @id @default(autoincrement())
  user_id          Int
  bond_id          Int
  type             String?          @db.VarChar(4)
  quantity         Int?
  price            Int?
  amount_spend     Int?
  profit           Int?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now()) @updatedAt

  user             user            @relation(fields: [user_id], references: [user_id])
  bond             Bond            @relation(fields: [bond_id], references: [bond_id])
}
